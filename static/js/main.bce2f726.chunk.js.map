{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","Square.js","Board.js","Game.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","props","className","winCell","onClick","value","Board","i","this","squares","winLine","includes","size","board","row","j","push","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","isAscending","slice","length","calculateWinner","winner","setState","concat","lastPosition","step","status","current","moves","map","move","x","y","Math","floor","desc","jumpTo","reverse","isDraw","handleClick","line","handleSorting","lines","from","_","k","console","log","a","b","c","d","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bce2f726.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nexport function Square(props) {\r\n  const className = props.winCell ? \"square highlight\" : \"square\";\r\n  return (\r\n    <button className={className} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Square } from \"./Square\";\r\n\r\nexport class Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        winCell={this.props.winLine && this.props.winLine.includes(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const size = this.props.size;\r\n    let board = [];\r\n    for (var i = 0; i < size; i++) {\r\n      let row = [];\r\n      for (var j = 0; j < size; j++) {\r\n        row.push(this.renderSquare(i * size + j));\r\n      }\r\n      board.push(<div className=\"board-row\">{row}</div>);\r\n    }\r\n    return <div>{board}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Board } from \"./Board\";\r\n\r\nexport class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      size: 5,\r\n      isAscending: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares).winner || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          lastPosition: i,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n  handleSorting() {\r\n    const status = this.state.isAscending;\r\n    this.setState({\r\n      isAscending: !status,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    let moves = history.map((step, move) => {\r\n      const x = (step.lastPosition % this.state.size) + 1;\r\n      const y = Math.floor(step.lastPosition / this.state.size) + 1;\r\n      const desc = move\r\n        ? \"Go to move #\" + move + `(${x}, ${y})`\r\n        : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button\r\n            onClick={() => this.jumpTo(move)}\r\n            className={move === this.state.stepNumber && \"selected\"}\r\n          >\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n    if (!this.state.isAscending) {\r\n      moves.reverse();\r\n    }\r\n    let status;\r\n    if (winner.winner) {\r\n      status = \"Winner: \" + winner.winner;\r\n    } else if (winner.isDraw) {\r\n      status = \"Draw\";\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            size={this.state.size}\r\n            winLine={winner.line}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <button onClick={() => this.handleSorting()}>\r\n            {this.state.isAscending ? \"Des\" : \"Asc\"}\r\n          </button>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  let lines = [];\r\n  // rows\r\n  for (let i = 0; i < 5 * 5; i += 5) {\r\n    let line = [];\r\n    line = Array.from({ length: 5 }, (_, k) => k + i);\r\n    lines.push(line);\r\n  }\r\n  // cols\r\n  for (let i = 0; i < 5; i++) {\r\n    let line = [];\r\n    for (let j = 0; j < 5; j++) {\r\n      line.push(i + j * 5);\r\n    }\r\n    lines.push(line);\r\n  }\r\n  // cross\r\n  lines.push([0, 6, 12, 18, 24]);\r\n  lines.push([4, 8, 12, 16, 20]);\r\n  console.log(lines);\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c, d, e] = lines[i];\r\n    if (\r\n      squares[a] &&\r\n      squares[a] === squares[b] &&\r\n      squares[a] === squares[c] &&\r\n      squares[a] === squares[d] &&\r\n      squares[a] === squares[e]\r\n    ) {\r\n      return {\r\n        winner: squares[a],\r\n        line: lines[i],\r\n        isDraw: false,\r\n      };\r\n    }\r\n  }\r\n  for (let i = 0; i < squares.length; i++) {\r\n    if (squares[i] === null) {\r\n      return {\r\n        winner: null,\r\n        line: null,\r\n        isDraw: false,\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    winner: null,\r\n    line: null,\r\n    isDraw: true,\r\n  };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Game } from \"./Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}